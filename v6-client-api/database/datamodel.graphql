enum TYPE {
  FLOAT
  INTEGER
  STRING
  BOOLEAN
  DATE
  OBJECT
}

enum PREDICATE {
  EQ
  NEQ
  GT
  GTEQ
  LT
  LTEQ
  MATCHES
  DOES_NOT_MATCH
  START
  NOT_START
  END
  NOT_END
  IN
  NOT_IN
  CONT
  NOT_CONT
}

interface Descriptable {
  title: String!
  description: String
}

interface Monitorable {
  duration: Int!
  fee: Int!
}

type Runner {
  id: ID! @unique
  publicKey: String! @unique
  stake: Float! @default(value: 0)
  reliability: Float! @default(value: 100)
  sourceWhitelisted: [WorkflowSource!]! @relation(name: "SourceRunnerWhitelist")
  sourceBlacklisted: [WorkflowSource!]! @relation(name: "SourceRunnerBlacklist")
  taskWhitelisted: [WorkflowTask!]! @relation(name: "TaskRunnerWhitelist")
  taskBlacklisted: [WorkflowTask!]! @relation(name: "TaskRunnerBlacklist")
}

type Parameter implements Descriptable {
  id: ID! @unique
  title: String!
  description: String
  type: TYPE! @default(value: STRING)
  required: Boolean @default(value: true)
}

type FilterDefinition {
  id: ID! @unique
  parameter: Parameter!
  predicate: PREDICATE! @default(value: EQ)
  value: String!
}

type Event implements Descriptable {
  id: ID! @unique
  title: String!
  description: String
  data: [Parameter!]!
}

type Task implements Descriptable {
  id: ID! @unique
  title: String!
  description: String
  arguments: [Parameter!]!
}

type Service implements Descriptable {
  id: ID! @unique
  title: String!
  description: String
  events: [Event!]!
  tasks: [Task!]!
}

type WorkflowConstant {
  id: ID! @unique
  value: String!
}

type WorkflowSource {
  id: ID! @unique
  whitelist: [Runner!]! @relation(name: "SourceRunnerWhitelist")
  blacklist: [Runner!]! @relation(name: "SourceRunnerBlacklist")
  event: Event!
  filters: [FilterDefinition!]!
}

type WorkflowTask {
  id: ID! @unique
  whitelist: [Runner!]! @relation(name: "TaskRunnerWhitelist")
  blacklist: [Runner!]! @relation(name: "TaskRunnerBlacklist")
  task: Task!
  parameters: [WorkflowResult!]!
  parents: [WorkflowTask!]! @relation(name: "ParentWorkflowTasks")
  children: [WorkflowTask!]! @relation(name: "ChildrenWorkflowTasks")
}

type WorkflowResult {
  id: ID! @unique
  reference: Parameter!
  value: String!
}

type Workflow implements Descriptable {
  id: ID! @unique
  title: String!
  description: String
  source: WorkflowSource!
  tasks: [WorkflowTask!]!

  executions: [WorkflowExecution!]!
}

type WorkflowExecution implements Monitorable {
  id: ID! @unique
  duration: Int!
  fee: Int!
  taskExecutions: [WorkflowTaskExecution!]!
}

type WorkflowTaskExecution implements Monitorable {
  id: ID! @unique
  duration: Int!
  fee: Int!
  results: [WorkflowResult!]!
}
